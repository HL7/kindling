# This is manually run to deploy SNAPSHOT versions of kindling to oss.sonaypte.org.
# We only want to publish a new SNAPSHOT version on successful merge to the main branch, 
# so we trigger on that branch.
trigger:
  - main

pr: none

pool:
  vmImage: "ubuntu-22.04"

# We cannot store things like gpg passwords and sonatype credentials as plain text within the 
# pipeline's yaml file, so we've created variable groups in our library to store sensitive variables.
# Pipelines do not load these groups by default, and we need to define which groups to load before
# running any steps.
variables:
- group: GPG_VARIABLE_GROUP
- group: SONATYPE_VARIABLE_GROUP

steps:

  # We need a valid signing key to sign our builds for deployment to sonatype. We have uploaded
  # both our private and public keys to Azure as 'secure files' that we load into individual pipelines.

  # 1. Load the public key file
  - task: DownloadSecureFile@1
    displayName: 'Load public key from secure files.'
    inputs:
      secureFile: public.pgp

  # 2. Load the private key file
  - task: DownloadSecureFile@1
    displayName: 'Load private key from secure files.'
    inputs:
      secureFile: private.pgp

  # Although we have imported the key files into our workspace, GPG has no knowledge that these keys exist.
  # We use a bash script to import both the private and puablic keys into gpg for future signing.

  # 3. Import keys into gpg
  - bash: |
      gpg --import --no-tty --batch --yes $(Agent.TempDirectory)/public.pgp
      gpg --import --no-tty --batch --yes $(Agent.TempDirectory)/private.pgp
      gpg --list-keys --keyid-format LONG
      gpg --list-secret-keys --keyid-format LONG
    displayName: 'Import signing keys into gpg.'

  # For creating the snapshot release with maven, we need to build a fake settings.xml
  # for it to read from. This is done for the master branch merges only.
  - bash: |
      cat >$(Agent.TempDirectory)/settings.xml <<EOL
      <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                                    https://maven.apache.org/xsd/settings-1.0.0.xsd">
        <servers>
          <server>
            <id>ossrh</id>
            <username>$(SONATYPE_USERNAME)</username>
            <password>$(SONATYPE_PASSWORD)</password>
          </server>
          <server>
            <id>$(GPG_KEYNAME)</id>
            <passphrase>$(GPG_PASSPHRASE)</passphrase>
          </server>
        </servers>
        <profiles>
          <profile>
            <id>release</id>
            <activation>
              <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
              <gpg.keyname>$(GPG_KEYNAME)</gpg.keyname>
            </properties>
          </profile>
        </profiles>
      </settings>
      EOL
    displayName: 'Create settings.xml'

  - task: Maven@4
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      options: '--settings $(Agent.TempDirectory)/settings.xml'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'package'

  - task: Maven@4
    displayName: 'Deploy to Sonatype staging'
    inputs:
      mavenPomFile: 'pom.xml'
      goals: deploy
      options: '--settings $(Agent.TempDirectory)/settings.xml -Dmaven.test.skip -DdeployToSonatype -e'
      publishJUnitResults: false